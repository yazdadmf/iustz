    class Controller {
    public:
        void attack(Character& char1);
	    void applyEffects(){
	        int damage=0;
		    for (int i=0;i<effects.size();i++) {
		       
	            if(effects[i].first>0){
		        string effectName = effects[i].second;
		
		        if (effectName == "fire") {
		           
		                damage += 5;
		        } 
				else if (effectName == "freeze") {
		            damage += 4;
		        } 
	            effects[i].first-=1;}
	            else{
	                 effects.erase(effects.begin() + i);
	                 i--;
	            }
		    }
	        health-=damage;
	        if(health>0){}
	        else{health=0;}
	            void getHit(int DAM, int bodypart){
        int damageTaken=DAM;
    
        if(rand()%10==0){ damageTaken*=0.7;
        cout<<"-"<<id<<"Blocked"<<endl;}
        switch (bodypart) {
	        case 1:
	            if (weakness == "head") {
	                damageTaken *= 2;
	            }
	            std::cout << "- " << id << " took ";
	            color(std::to_string(damageTaken), "red");
	            std::cout << " damage to the head!" << std::endl;
	            break;
	        case 2:
	            if (weakness == "middle") {
	                damageTaken *= 2;
	            }
	            std::cout << "- " << id << " took ";
	            color(std::to_string(damageTaken), "red");
	            std::cout << " damage to the body!" << std::endl;
	            break;
	        case 3:
	            if (weakness == "lower") {
	                damageTaken *= 2;
	            }
	            std::cout << "- " << id << " took ";
	            color(std::to_string(damageTaken), "red");
	            std::cout << " damage to the lower body!" << std::endl;
	            break;
	        default:
	            std::cout << "- " << id << " took ";
	            color(std::to_string(damageTaken), "red");
	            std::cout << " damage!" << std::endl;
	            break;
    	}
        health-= damageTaken;
    };
	    void gethit1(Throwables* thrown){
	        gethit(thrown->instantDamage,2);
	        vector<pair<int,string>>effectsh=thrown->effects;
	        addeffects(effectsh);
	        delete thrown;
		} 
	    int moddifier(string stat){
	        int ret=1;
	        for(int i=0;i<effects.size();i++){
	            if(effects[i].second==stat+"+"){
	                cout<<"-applied streght moddifer";
	                ret*=1.2;
	            }
	            else if((effects[i].second==stat+"-")){
	                ret*=0.9;
	            }
	            else if((effects[i].second=="stun")){
	                cout<<"-zombie is stuned";
	                ret=0;
	            }
	            else if((effects[i].second=="slip")){
	                if(!(rand()%4)){cout<<"-zombie sliped";ret=0;}
	            }
	            else if((effects[i].second=="confusion")){
	                if(!(rand()%2)){cout<<"-zombie is confused";ret=0.5;}
	            }
	        }
	        return ret;
	    }
		};
    };
